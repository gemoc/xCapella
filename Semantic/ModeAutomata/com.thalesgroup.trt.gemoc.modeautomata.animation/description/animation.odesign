<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/description/tool/1.1.0" name="animation" version="9.0.0">
  <ownedViewpoints name="ModeAutomataSimulationLayers">
    <ownedRepresentationExtensions xsi:type="description_1:DiagramExtensionDescription" name="ModesAnimation" viewpointURI="viewpoint:/com.thalesgroup.trt.mde.vp.statemode.design/Statemode_ID" representationName="ModeMachine">
      <metamodel href="../../com.thalesgroup.trt.mde.vp.modesimulation/models/ModeSimulation.ecore#/"/>
      <layers name="xCapellaAnimation" activeByDefault="true">
        <decorationDescriptionsSet>
          <decorationDescriptions xsi:type="description_1:MappingBasedDecoration" name="currentMode" position="EAST" decoratorPath="/com.thalesgroup.trt.gemoc.modeautomata.animation/icons/cursor-3-24.png" preconditionExpression="[self.eContainer(statemode::ModeMachine).eContents(ModeSimulation::MachineRuntimeData)->first().oclAsType(ModeSimulation::MachineRuntimeData).current = self/]">
            <mappings xsi:type="description_1:NodeMapping" href="../../com.thalesgroup.trt.mde.vp.statemode.design/description/statemode.odesign#//@ownedViewpoints[name='Statemode_ID']/@ownedRepresentations[name='ModeMachine']/@defaultLayer/@nodeMappings[name='Initial_NM']"/>
            <mappings xsi:type="description_1:NodeMapping" href="../../com.thalesgroup.trt.mde.vp.statemode.design/description/statemode.odesign#//@ownedViewpoints[name='Statemode_ID']/@ownedRepresentations[name='ModeMachine']/@defaultLayer/@nodeMappings[name='Final_NM']"/>
            <mappings xsi:type="description_1:ContainerMapping" href="../../com.thalesgroup.trt.mde.vp.statemode.design/description/statemode.odesign#//@ownedViewpoints[name='Statemode_ID']/@ownedRepresentations[name='ModeMachine']/@defaultLayer/@containerMappings[name='Mode_NM']"/>
            <mappings xsi:type="description_1:NodeMapping" href="../../com.thalesgroup.trt.mde.vp.statemode.design/description/statemode.odesign#//@ownedViewpoints[name='Statemode_ID']/@ownedRepresentations[name='ModeMachine']/@defaultLayer/@containerMappings[name='Mode_NM']/@borderedNodeMappings[name='modeDoAction_BNM']"/>
            <mappings xsi:type="description_1:NodeMapping" href="../../com.thalesgroup.trt.mde.vp.statemode.design/description/statemode.odesign#//@ownedViewpoints[name='Statemode_ID']/@ownedRepresentations[name='ModeMachine']/@defaultLayer/@containerMappings[name='Mode_NM']/@borderedNodeMappings[name='modeEnterAction_NM']"/>
            <mappings xsi:type="description_1:NodeMapping" href="../../com.thalesgroup.trt.mde.vp.statemode.design/description/statemode.odesign#//@ownedViewpoints[name='Statemode_ID']/@ownedRepresentations[name='ModeMachine']/@defaultLayer/@containerMappings[name='Mode_NM']/@borderedNodeMappings[name='modeExitAction_BNM']"/>
          </decorationDescriptions>
          <decorationDescriptions xsi:type="description:SemanticBasedDecoration" name="EventOccured" position="CENTER" decoratorPath="eventOccurred.png" preconditionExpression="service:self.hasBeenActivated" domainClass="AbstractEvent"/>
        </decorationDescriptionsSet>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="service:self.hasBeenActivated">
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="strokeColor">
              <appliedOn href="../../com.thalesgroup.trt.mde.vp.statemode.design/description/statemode.odesign#//@ownedViewpoints[name='Statemode_ID']/@ownedRepresentations[name='ModeMachine']/@defaultLayer/@edgeMappings[name='Transition_EM']/@style"/>
              <value href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
        </customization>
      </layers>
    </ownedRepresentationExtensions>
    <ownedRepresentationExtensions xsi:type="description_1:DiagramExtensionDescription" name="ModesDebug" viewpointURI="viewpoint:/com.thalesgroup.trt.mde.vp.statemode.design/Statemode_ID" representationName="ModeMachine">
      <layers name="xCapellaDebug" activeByDefault="true">
        <toolSections name="DebugSection">
          <ownedTools xsi:type="tool:PopupMenu" name="GemocBreakPoint">
            <menuItemDescription xsi:type="tool:OperationAction" name="DebugAs" label="gemocDebugAs" icon="/com.thalesgroup.trt.gemoc.modeautomata.animation/icons/debug_exc.gif">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ExternalJavaAction" name="gemocDebugAs" icon="/com.thalesgroup.trt.gemoc.modeautomata.animation/icons/debug_exc.gif" id="org.gemoc.gemoc_modeling_workbench.ui.debug.sirius.action.gemocDebugAs"/>
              </initialOperation>
            </menuItemDescription>
            <menuItemDescription xsi:type="tool:OperationAction" name="ToggleGemocbreakpoint" label="Toggle Gemoc breakpoint" icon="/com.thalesgroup.trt.gemoc.modeautomata.animation/icons/breakpoint.gif">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ExternalJavaAction" name="Togglebreakpoint" label="MyTGBK" icon="/com.thalesgroup.trt.gemoc.modeautomata.animation/icons/breakpoint.gif" id="org.gemoc.gemoc_modeling_workbench.ui.debug.sirius.action.gemocToggleBreakpoint"/>
              </initialOperation>
            </menuItemDescription>
          </ownedTools>
        </toolSections>
        <decorationDescriptionsSet>
          <decorationDescriptions xsi:type="description_1:MappingBasedDecoration" name="Enabled breakpoint" position="WEST" decoratorPath="/com.thalesgroup.trt.gemoc.modeautomata.animation/icons/breakpoint_enabled.gif" preconditionExpression="service:self.hasEnabledBreakpoint">
            <mappings xsi:type="description_1:EdgeMapping" href="../../com.thalesgroup.trt.mde.vp.statemode.design/description/statemode.odesign#//@ownedViewpoints[name='Statemode_ID']/@ownedRepresentations[name='ModeMachine']/@defaultLayer/@edgeMappings[name='Transition_EM']"/>
            <mappings xsi:type="description_1:NodeMapping" href="../../com.thalesgroup.trt.mde.vp.statemode.design/description/statemode.odesign#//@ownedViewpoints[name='Statemode_ID']/@ownedRepresentations[name='ModeMachine']/@defaultLayer/@nodeMappings[name='EventGuard_NM']"/>
          </decorationDescriptions>
          <decorationDescriptions xsi:type="description_1:MappingBasedDecoration" name="Disabled breakpoint" position="WEST" decoratorPath="/com.thalesgroup.trt.gemoc.modeautomata.animation/icons/breakpoint_disabled.gif" preconditionExpression="service:self.hasDisabledBreakpoint">
            <mappings xsi:type="description_1:EdgeMapping" href="../../com.thalesgroup.trt.mde.vp.statemode.design/description/statemode.odesign#//@ownedViewpoints[name='Statemode_ID']/@ownedRepresentations[name='ModeMachine']/@defaultLayer/@edgeMappings[name='Transition_EM']"/>
            <mappings xsi:type="description_1:NodeMapping" href="../../com.thalesgroup.trt.mde.vp.statemode.design/description/statemode.odesign#//@ownedViewpoints[name='Statemode_ID']/@ownedRepresentations[name='ModeMachine']/@defaultLayer/@nodeMappings[name='EventGuard_NM']"/>
          </decorationDescriptions>
        </decorationDescriptionsSet>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="service:self.isCurrentInstruction">
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="color" value="//@userColorsPalettes[name='Mode%20Automata%20Palette']/@entries[name='current%20instruction']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="backgroundColor" value="//@userColorsPalettes[name='Mode%20Automata%20Palette']/@entries[name='current%20instruction']"/>
            <featureCustomizations xsi:type="description:EReferenceCustomization" applyOnAll="true" referenceName="strokeColor" value="//@userColorsPalettes[name='Mode%20Automata%20Palette']/@entries[name='current%20instruction']"/>
          </vsmElementCustomizations>
        </customization>
      </layers>
    </ownedRepresentationExtensions>
    <ownedJavaExtensions qualifiedClassName="com.thalesgroup.trt.gemoc.modeautomata.animation.services.ModeAutomataDebuggerServices"/>
    <ownedJavaExtensions qualifiedClassName="com.thalesgroup.trt.gemoc.modeautomata.animation.services.ModeAutomataServices"/>
    <ownedJavaExtensions qualifiedClassName="com.thalesgroup.trt.gemoc.modeautomata.animation.services.ModeAutomataAnimatorServices"/>
  </ownedViewpoints>
  <userColorsPalettes name="Mode Automata Palette">
    <entries xsi:type="description:UserFixedColor" red="255" green="255" blue="0" name="current instruction"/>
    <entries xsi:type="description:UserFixedColor" red="0" green="240" blue="255" name="activated instruction"/>
    <entries xsi:type="description:UserFixedColor" red="236" green="254" blue="229" name="veryLightGreen"/>
  </userColorsPalettes>
</description:Group>

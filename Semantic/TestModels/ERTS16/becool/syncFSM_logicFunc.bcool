xcapella_coordination

ImportLib "platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/kernel.ccslLib" 
ImportLib "platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/CCSL.ccslLib"
ImportLib "facilities.bcoollib"

ImportInterface "platform:/plugin/org.gemoc.xcapella.dataflow.dse/ecl/CapellaDataflow.ecl" as fa
ImportInterface "platform:/plugin/com.thalesgroup.trt.mocc.modemachine.dse/ecl/modemachine.ecl" as mode 

Spec test


Operator ModeEnteringActivateFunctional(enter: mode::entering, activate: fa::activate)
    MatchingCorrespondance: when
      enter.availableFunctionalChains->exists(fc | fc = activate)
    CoordinationRule:
      facilities3.RendezVous(activate, enter)
end Operator;

Operator ModeLeavingDeactivateFunctional(leave: mode::leaving, deactivate: fa::deactivate)
    MatchingCorrespondance: when
      leave.availableFunctionalChains->exists(fc | fc = deactivate)
    CoordinationRule:
      facilities3.RendezVous(deactivate, leave)
end Operator;  

//Operator MatchingandCoordinationSharedEvents (dse1 : i_Mode::entering, dse2 : i_DF::makeactive) 
//	
//	MatchingCorrespondance: when dse1 and dse1.oclAsType(statemode::Mode_).enterAction.; 
//	CoordinationRule:  facilities3.RendezVous(dse1,dse2)
//end operator;

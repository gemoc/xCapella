package com.thalesgroup.trt.mde.vp.time.time.provider;

import com.thalesgroup.trt.mde.vp.time.time.TimeFactory;
import com.thalesgroup.trt.mde.vp.time.time.TimePackage;

import com.thalesgroup.trt.mde.vp.time.time.util.TimeAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.ecore.util.EcoreUtil;

import org.eclipse.emf.edit.command.CommandParameter;

import org.eclipse.emf.edit.domain.EditingDomain;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.polarsys.capella.common.data.activity.ActivityEdge;
import org.polarsys.capella.common.data.activity.ActivityPackage;
import org.polarsys.capella.common.data.activity.ObjectNode;
import org.polarsys.capella.common.data.activity.ValuePin;

import org.polarsys.capella.common.data.activity.util.ActivitySwitch;

import org.polarsys.capella.common.data.modellingcore.AbstractConstraint;
import org.polarsys.capella.common.data.modellingcore.AbstractParameter;
import org.polarsys.capella.common.data.modellingcore.AbstractParameterSet;
import org.polarsys.capella.common.data.modellingcore.ModellingcorePackage;

import org.polarsys.capella.common.data.modellingcore.util.ModellingcoreSwitch;

import org.polarsys.capella.core.data.cs.CsPackage;
import org.polarsys.capella.core.data.cs.Part;

import org.polarsys.capella.core.data.cs.util.CsSwitch;

import org.polarsys.capella.core.data.sharedmodel.GenericPkg;
import org.polarsys.capella.core.data.sharedmodel.SharedmodelPackage;

import org.polarsys.capella.core.data.sharedmodel.util.SharedmodelSwitch;

import org.polarsys.kitalpha.emde.extension.ModelExtensionHelper;

import org.polarsys.kitalpha.emde.extension.edit.ChildCreationExtenderManager;

import org.polarsys.kitalpha.emde.model.edit.provider.NewChildDescriptorHelper;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class TimeItemProviderAdapterFactory extends TimeAdapterFactory
		implements ComposeableAdapterFactory, IChangeNotifier, IDisposable,
		IChildCreationExtender {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This helps manage the child creation extenders.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChildCreationExtenderManager childCreationExtenderManager = new ChildCreationExtenderManager(
			TimeEditPlugin.INSTANCE, TimePackage.eNS_URI);

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public TimeItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.thalesgroup.trt.mde.vp.time.time.Clock} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClockItemProvider clockItemProvider;

	/**
	 * This creates an adapter for a {@link com.thalesgroup.trt.mde.vp.time.time.Clock}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClockAdapter() {
		if (clockItemProvider == null) {
			clockItemProvider = new ClockItemProvider(this);
		}

		return clockItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.thalesgroup.trt.mde.vp.time.time.TimeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeValueItemProvider timeValueItemProvider;

	/**
	 * This creates an adapter for a {@link com.thalesgroup.trt.mde.vp.time.time.TimeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeValueAdapter() {
		if (timeValueItemProvider == null) {
			timeValueItemProvider = new TimeValueItemProvider(this);
		}

		return timeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.thalesgroup.trt.mde.vp.time.time.Duration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DurationItemProvider durationItemProvider;

	/**
	 * This creates an adapter for a {@link com.thalesgroup.trt.mde.vp.time.time.Duration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDurationAdapter() {
		if (durationItemProvider == null) {
			durationItemProvider = new DurationItemProvider(this);
		}

		return durationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.thalesgroup.trt.mde.vp.time.time.DurationInterval} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DurationIntervalItemProvider durationIntervalItemProvider;

	/**
	 * This creates an adapter for a {@link com.thalesgroup.trt.mde.vp.time.time.DurationInterval}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDurationIntervalAdapter() {
		if (durationIntervalItemProvider == null) {
			durationIntervalItemProvider = new DurationIntervalItemProvider(
					this);
		}

		return durationIntervalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.thalesgroup.trt.mde.vp.time.time.Span} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpanItemProvider spanItemProvider;

	/**
	 * This creates an adapter for a {@link com.thalesgroup.trt.mde.vp.time.time.Span}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpanAdapter() {
		if (spanItemProvider == null) {
			spanItemProvider = new SpanItemProvider(this);
		}

		return spanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.thalesgroup.trt.mde.vp.time.time.Instant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstantItemProvider instantItemProvider;

	/**
	 * This creates an adapter for a {@link com.thalesgroup.trt.mde.vp.time.time.Instant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstantAdapter() {
		if (instantItemProvider == null) {
			instantItemProvider = new InstantItemProvider(this);
		}

		return instantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.thalesgroup.trt.mde.vp.time.time.InstantInterval} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstantIntervalItemProvider instantIntervalItemProvider;

	/**
	 * This creates an adapter for a {@link com.thalesgroup.trt.mde.vp.time.time.InstantInterval}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstantIntervalAdapter() {
		if (instantIntervalItemProvider == null) {
			instantIntervalItemProvider = new InstantIntervalItemProvider(this);
		}

		return instantIntervalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.thalesgroup.trt.mde.vp.time.time.Translation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TranslationItemProvider translationItemProvider;

	/**
	 * This creates an adapter for a {@link com.thalesgroup.trt.mde.vp.time.time.Translation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTranslationAdapter() {
		if (translationItemProvider == null) {
			translationItemProvider = new TranslationItemProvider(this);
		}

		return translationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.thalesgroup.trt.mde.vp.time.time.TimeEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeEventItemProvider timeEventItemProvider;

	/**
	 * This creates an adapter for a {@link com.thalesgroup.trt.mde.vp.time.time.TimeEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeEventAdapter() {
		if (timeEventItemProvider == null) {
			timeEventItemProvider = new TimeEventItemProvider(this);
		}

		return timeEventItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory
				.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(
			ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>)
					|| (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public List<IChildCreationExtender> getChildCreationExtenders() {
		return childCreationExtenderManager.getChildCreationExtenders();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Collection<?> getNewChildDescriptors(Object object,
			EditingDomain editingDomain) {
		return childCreationExtenderManager.getNewChildDescriptors(object,
				editingDomain);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ResourceLocator getResourceLocator() {
		return childCreationExtenderManager;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (clockItemProvider != null)
			clockItemProvider.dispose();
		if (timeValueItemProvider != null)
			timeValueItemProvider.dispose();
		if (durationItemProvider != null)
			durationItemProvider.dispose();
		if (durationIntervalItemProvider != null)
			durationIntervalItemProvider.dispose();
		if (spanItemProvider != null)
			spanItemProvider.dispose();
		if (instantItemProvider != null)
			instantItemProvider.dispose();
		if (instantIntervalItemProvider != null)
			instantIntervalItemProvider.dispose();
		if (translationItemProvider != null)
			translationItemProvider.dispose();
		if (timeEventItemProvider != null)
			timeEventItemProvider.dispose();
	}

	/**
	 * A child creation extender for the {@link ActivityPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static class ActivityChildCreationExtender implements
			IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		protected static class CreationSwitch extends ActivitySwitch<Object> {
			/**
			 * The child descriptors being populated.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the given domain.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors,
					EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}

			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseActivityEdge(ActivityEdge object) {
				// begin-extension-code
				if (ModelExtensionHelper.getInstance()
						.isExtensionModelDisabled(
								EcoreUtil.getRootContainer(object).eClass()
										.getEPackage().getNsURI(),
								"http://www.thalesgroup.com/trt/time/1.0.0")) { //$NON-NLS-1$
					return null;
				}
				// end-extension-code
				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__RATE,
							TimeFactory.eINSTANCE.createTimeValue());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__RATE,
							TimeFactory.eINSTANCE.createDuration());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__RATE,
							TimeFactory.eINSTANCE.createDurationInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__RATE,
							TimeFactory.eINSTANCE.createSpan());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__RATE,
							TimeFactory.eINSTANCE.createInstant());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__RATE,
							TimeFactory.eINSTANCE.createInstantInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__RATE,
							TimeFactory.eINSTANCE.createTranslation());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__PROBABILITY,
							TimeFactory.eINSTANCE.createTimeValue());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__PROBABILITY,
							TimeFactory.eINSTANCE.createDuration());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__PROBABILITY,
							TimeFactory.eINSTANCE.createDurationInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__PROBABILITY,
							TimeFactory.eINSTANCE.createSpan());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__PROBABILITY,
							TimeFactory.eINSTANCE.createInstant());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__PROBABILITY,
							TimeFactory.eINSTANCE.createInstantInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__PROBABILITY,
							TimeFactory.eINSTANCE.createTranslation());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__GUARD,
							TimeFactory.eINSTANCE.createTimeValue());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__GUARD,
							TimeFactory.eINSTANCE.createDuration());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__GUARD,
							TimeFactory.eINSTANCE.createDurationInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__GUARD,
							TimeFactory.eINSTANCE.createSpan());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__GUARD,
							TimeFactory.eINSTANCE.createInstant());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__GUARD,
							TimeFactory.eINSTANCE.createInstantInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__GUARD,
							TimeFactory.eINSTANCE.createTranslation());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__WEIGHT,
							TimeFactory.eINSTANCE.createTimeValue());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__WEIGHT,
							TimeFactory.eINSTANCE.createDuration());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__WEIGHT,
							TimeFactory.eINSTANCE.createDurationInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__WEIGHT,
							TimeFactory.eINSTANCE.createSpan());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__WEIGHT,
							TimeFactory.eINSTANCE.createInstant());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__WEIGHT,
							TimeFactory.eINSTANCE.createInstantInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.ACTIVITY_EDGE__WEIGHT,
							TimeFactory.eINSTANCE.createTranslation());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				return null;
			}

			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseObjectNode(ObjectNode object) {
				// begin-extension-code
				if (ModelExtensionHelper.getInstance()
						.isExtensionModelDisabled(
								EcoreUtil.getRootContainer(object).eClass()
										.getEPackage().getNsURI(),
								"http://www.thalesgroup.com/trt/time/1.0.0")) { //$NON-NLS-1$
					return null;
				}
				// end-extension-code
				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.OBJECT_NODE__UPPER_BOUND,
							TimeFactory.eINSTANCE.createTimeValue());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.OBJECT_NODE__UPPER_BOUND,
							TimeFactory.eINSTANCE.createDuration());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.OBJECT_NODE__UPPER_BOUND,
							TimeFactory.eINSTANCE.createDurationInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.OBJECT_NODE__UPPER_BOUND,
							TimeFactory.eINSTANCE.createSpan());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.OBJECT_NODE__UPPER_BOUND,
							TimeFactory.eINSTANCE.createInstant());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.OBJECT_NODE__UPPER_BOUND,
							TimeFactory.eINSTANCE.createInstantInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.OBJECT_NODE__UPPER_BOUND,
							TimeFactory.eINSTANCE.createTranslation());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				return null;
			}

			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseValuePin(ValuePin object) {
				// begin-extension-code
				if (ModelExtensionHelper.getInstance()
						.isExtensionModelDisabled(
								EcoreUtil.getRootContainer(object).eClass()
										.getEPackage().getNsURI(),
								"http://www.thalesgroup.com/trt/time/1.0.0")) { //$NON-NLS-1$
					return null;
				}
				// end-extension-code
				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.VALUE_PIN__VALUE,
							TimeFactory.eINSTANCE.createTimeValue());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.VALUE_PIN__VALUE,
							TimeFactory.eINSTANCE.createDuration());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.VALUE_PIN__VALUE,
							TimeFactory.eINSTANCE.createDurationInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.VALUE_PIN__VALUE,
							TimeFactory.eINSTANCE.createSpan());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.VALUE_PIN__VALUE,
							TimeFactory.eINSTANCE.createInstant());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.VALUE_PIN__VALUE,
							TimeFactory.eINSTANCE.createInstantInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ActivityPackage.Literals.VALUE_PIN__VALUE,
							TimeFactory.eINSTANCE.createTranslation());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				return null;
			}

			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature,
					Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public Collection<Object> getNewChildDescriptors(Object object,
				EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain)
					.doSwitch((EObject) object);
			return result;
		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public ResourceLocator getResourceLocator() {
			return TimeEditPlugin.INSTANCE;
		}
	}

	/**
	 * A child creation extender for the {@link ModellingcorePackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static class ModellingcoreChildCreationExtender implements
			IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		protected static class CreationSwitch extends
				ModellingcoreSwitch<Object> {
			/**
			 * The child descriptors being populated.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the given domain.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors,
					EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}

			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseAbstractConstraint(AbstractConstraint object) {
				// begin-extension-code
				if (ModelExtensionHelper.getInstance()
						.isExtensionModelDisabled(
								EcoreUtil.getRootContainer(object).eClass()
										.getEPackage().getNsURI(),
								"http://www.thalesgroup.com/trt/time/1.0.0")) { //$NON-NLS-1$
					return null;
				}
				// end-extension-code
				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_CONSTRAINT__OWNED_SPECIFICATION,
							TimeFactory.eINSTANCE.createTimeValue());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_CONSTRAINT__OWNED_SPECIFICATION,
							TimeFactory.eINSTANCE.createDuration());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_CONSTRAINT__OWNED_SPECIFICATION,
							TimeFactory.eINSTANCE.createDurationInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_CONSTRAINT__OWNED_SPECIFICATION,
							TimeFactory.eINSTANCE.createSpan());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_CONSTRAINT__OWNED_SPECIFICATION,
							TimeFactory.eINSTANCE.createInstant());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_CONSTRAINT__OWNED_SPECIFICATION,
							TimeFactory.eINSTANCE.createInstantInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_CONSTRAINT__OWNED_SPECIFICATION,
							TimeFactory.eINSTANCE.createTranslation());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				return null;
			}

			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseAbstractParameter(AbstractParameter object) {
				// begin-extension-code
				if (ModelExtensionHelper.getInstance()
						.isExtensionModelDisabled(
								EcoreUtil.getRootContainer(object).eClass()
										.getEPackage().getNsURI(),
								"http://www.thalesgroup.com/trt/time/1.0.0")) { //$NON-NLS-1$
					return null;
				}
				// end-extension-code
				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER__RATE,
							TimeFactory.eINSTANCE.createTimeValue());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER__RATE,
							TimeFactory.eINSTANCE.createDuration());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER__RATE,
							TimeFactory.eINSTANCE.createDurationInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER__RATE,
							TimeFactory.eINSTANCE.createSpan());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER__RATE,
							TimeFactory.eINSTANCE.createInstant());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER__RATE,
							TimeFactory.eINSTANCE.createInstantInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER__RATE,
							TimeFactory.eINSTANCE.createTranslation());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER__PROBABILITY,
							TimeFactory.eINSTANCE.createTimeValue());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER__PROBABILITY,
							TimeFactory.eINSTANCE.createDuration());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER__PROBABILITY,
							TimeFactory.eINSTANCE.createDurationInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER__PROBABILITY,
							TimeFactory.eINSTANCE.createSpan());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER__PROBABILITY,
							TimeFactory.eINSTANCE.createInstant());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER__PROBABILITY,
							TimeFactory.eINSTANCE.createInstantInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER__PROBABILITY,
							TimeFactory.eINSTANCE.createTranslation());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				return null;
			}

			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseAbstractParameterSet(AbstractParameterSet object) {
				// begin-extension-code
				if (ModelExtensionHelper.getInstance()
						.isExtensionModelDisabled(
								EcoreUtil.getRootContainer(object).eClass()
										.getEPackage().getNsURI(),
								"http://www.thalesgroup.com/trt/time/1.0.0")) { //$NON-NLS-1$
					return null;
				}
				// end-extension-code
				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER_SET__PROBABILITY,
							TimeFactory.eINSTANCE.createTimeValue());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER_SET__PROBABILITY,
							TimeFactory.eINSTANCE.createDuration());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER_SET__PROBABILITY,
							TimeFactory.eINSTANCE.createDurationInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER_SET__PROBABILITY,
							TimeFactory.eINSTANCE.createSpan());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER_SET__PROBABILITY,
							TimeFactory.eINSTANCE.createInstant());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER_SET__PROBABILITY,
							TimeFactory.eINSTANCE.createInstantInterval());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							ModellingcorePackage.Literals.ABSTRACT_PARAMETER_SET__PROBABILITY,
							TimeFactory.eINSTANCE.createTranslation());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				return null;
			}

			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature,
					Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public Collection<Object> getNewChildDescriptors(Object object,
				EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain)
					.doSwitch((EObject) object);
			return result;
		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public ResourceLocator getResourceLocator() {
			return TimeEditPlugin.INSTANCE;
		}
	}

	/**
	 * A child creation extender for the {@link SharedmodelPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static class SharedmodelChildCreationExtender implements
			IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		protected static class CreationSwitch extends SharedmodelSwitch<Object> {
			/**
			 * The child descriptors being populated.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the given domain.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors,
					EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}

			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseGenericPkg(GenericPkg object) {
				// begin-extension-code
				if (ModelExtensionHelper.getInstance()
						.isExtensionModelDisabled(
								EcoreUtil.getRootContainer(object).eClass()
										.getEPackage().getNsURI(),
								"http://www.thalesgroup.com/trt/time/1.0.0")) { //$NON-NLS-1$
					return null;
				}
				// end-extension-code
				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							SharedmodelPackage.Literals.GENERIC_PKG__CAPELLA_ELEMENTS,
							TimeFactory.eINSTANCE.createClock());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				return null;
			}

			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature,
					Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public Collection<Object> getNewChildDescriptors(Object object,
				EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain)
					.doSwitch((EObject) object);
			return result;
		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public ResourceLocator getResourceLocator() {
			return TimeEditPlugin.INSTANCE;
		}
	}

	/**
	 * A child creation extender for the {@link CsPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static class CsChildCreationExtender implements
			IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		protected static class CreationSwitch extends CsSwitch<Object> {
			/**
			 * The child descriptors being populated.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the given domain.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors,
					EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}

			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePart(Part object) {
				// begin-extension-code
				if (ModelExtensionHelper.getInstance()
						.isExtensionModelDisabled(
								EcoreUtil.getRootContainer(object).eClass()
										.getEPackage().getNsURI(),
								"http://www.thalesgroup.com/trt/time/1.0.0")) { //$NON-NLS-1$
					return null;
				}
				// end-extension-code
				// begin-extension-code
				{
					CommandParameter commandParameter = createChildParameter(
							CsPackage.Literals.PART__OWNED_ABSTRACT_TYPE,
							TimeFactory.eINSTANCE.createTimeEvent());
					if (NewChildDescriptorHelper.isValidCommand(object,
							commandParameter)) {
						newChildDescriptors.add(commandParameter);
					}
				}
				// end-extension-code

				return null;
			}

			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature,
					Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public Collection<Object> getNewChildDescriptors(Object object,
				EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain)
					.doSwitch((EObject) object);
			return result;
		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public ResourceLocator getResourceLocator() {
			return TimeEditPlugin.INSTANCE;
		}
	}

}
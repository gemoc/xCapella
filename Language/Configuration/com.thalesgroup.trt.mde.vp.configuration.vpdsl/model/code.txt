SystemConfigurationImpl:

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated NOT
	 */

	public EList<AbstractFunction> getAvailableFunctions() {
		HashMap<String, AbstractFunction> map = new HashMap<String, AbstractFunction>();
		
		EList <Mode_> supMode = this.getSupportedModes();
		
		for (Mode_ mode : supMode) {
			for (FunctionalChain chain : mode.getAvailableFunctionalChains()) {
				for (AbstractFunction function : chain.getEnactedFunctions()) {
					if(!map.containsKey(function.getId()));
					map.put(function.getId(), function);
				}
			}
		}
				
		return new BasicEList<AbstractFunction>(map.values());

		// TODO: implement this method to return the 'Available Functions' reference list
		// Ensure that you remove @generated or mark it @generated NOT
		// The list is expected to implement org.eclipse.emf.ecore.util.InternalEList and org.eclipse.emf.ecore.EStructuralFeature.Setting
		// so it's likely that an appropriate subclass of org.eclipse.emf.ecore.util.EcoreEList should be used.
		//throw new UnsupportedOperationException();

	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated NOT
	 */

	public EList<Component> getAvailableComponents() {
		EList <Component> ret = new BasicEList<Component>();
		EList<AbstractFunction> functions = this.getAvailableFunctions();
		
		for (AbstractFunction abstractFunction : functions) {
			for(ComponentFunctionalAllocation alloc : abstractFunction.getComponentFunctionalAllocations()) {
				AbstractFunctionalBlock block = alloc.getBlock();
				if(block instanceof Component) {
					ret.add((Component)block);
				}
			}
		}
		
		return ret;
		
		// TODO: implement this method to return the 'Available Components' reference list
		// Ensure that you remove @generated or mark it @generated NOT
		// The list is expected to implement org.eclipse.emf.ecore.util.InternalEList and org.eclipse.emf.ecore.EStructuralFeature.Setting
		// so it's likely that an appropriate subclass of org.eclipse.emf.ecore.util.EcoreEList should be used.
		//throw new UnsupportedOperationException();

	}
	
	
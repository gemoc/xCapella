/**
 * Copyright (c) PolarSys, 2015. All rights reserved. 
 *
 *	Viewpoint configuration
 *	@author: Sébastien Madelénat
 *	@date: 25/08/15
 *
 */
import external "http://www.thalesgroup.com/trt/mode/1.0.0" 
import external "http://www.thalesgroup.com/trt/expression/1.0.0" 
 
Data configuration.data {
	Class Configurations{
		extends capellamodeller.SystemEngineering
		
		Associations:
			systemConfigurations contains [0,*] SystemConfiguration
			componentConfigurations contains [0,*] ComponentConfiguration
	}
	
	
	Class SystemConfiguration {
		description: "A SystemConfiguration aggregates the right set of ComponentConfigurations (componentConfigurations) in order to support the Modes it is designed to support (supportedModes). In the special case of SystemConfiguration at Physical Architecture level, it references the DeploymentConfiguration (deployement) used. A SystemConfiguration must have one ComponentConfiguration per Component supporting AbstractFunctions used by SystemConfiguration's supported Modes' available FunctionalChains."
//		extends capellacore.ModellingArchitecture
		superClass external capellacore.NamedElement
		Associations:
			//Deployment configuration for PA
			deployment contains [0,1] Deployment
			//modes supported in current configuration
			supportedModes refers [1,*] external mode.Mode_
			//aggregated componentConfiguration
			componentConfigurations refers [1,*] ComponentConfiguration
			
			//derived associations from the availableFunctionalChains from the availableModes
			availableFunctions refers [1,*] external fa.AbstractFunction derived:true transient:true volatile: true
			availableComponents refers [1,*] external cs.Component derived:true transient:true volatile: true
			
			//checks
			//verify the behavioral components involved in deployment are compatible with behavioral component available from the modes.
			//verify the componentConfiguration relies on behavioral component available from the modes (and deployment).
	}
	
	Class ComponentConfiguration {
		description: "A ComponentConfiguration describes a given set of consistent ParameterValues (componentsParameters) of the owning Component (component). A ComponentConfiguration is a part of a consistent SystemConfiguration."
		extends cs.Component
		superClass external capellacore.NamedElement
		
		Associations:
			//component parametric configuration
			component refers [1,1] external cs.Component
			componentParameters contains [0,*] ParameterValue
			//aggregated sub-components componentConfiguration --ADD synchro w/ TCE
			// NB: pour nous seuls les composants feuille étaient utiles (alloc de fonctions, etc.)
			componentConfigurations refers [1,*] ComponentConfiguration
			//availableStates????
			//availableFunctions???? est-ce qu'on calcule ça à partir des fonctions allouées sur le composant ou est-ce qu'on remplace l'allocation des fonctions sur le composant par la configuration???
			//Je pense que ce sont deux choses qui ne sont pas du même niveau conceptuel, donc je penche pour un calcul si on ajoute ce concept.
	}
	
	Class Deployment {
		superClass external capellacore.NamedElement
		Associations:
			deploymentLinks refers [1,*] external cs.AbstractDeploymentLink
	}
	
	Class ParameterValue {
		description: "A ParameterValue represents the explicit value (value) taken by a Component ConfigurationPort (port) for a given ComponentConfiguration."
		superClass external capellacore.NamedElement
		Associations:
			port refers [1,1] ConfigurationPort
			value refers [1,1] external expression.Expression
	}
	
	Class ConfigurationPort {
		description: "A ConfigurationPort represents the configuration parameter of a Component specification."
		superClass external fa.ComponentPort
	}
}
